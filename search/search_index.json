{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#brendan-keeters-individual-webpage","title":"Brendan Keeters Individual Webpage","text":"<p>Welcome to our project report for EGR314. This webpage is an individual subsection for our much bigger project. On this webpage you will be able to view the progress and individual components to the subsection: 2 way Wifi Communication.</p> <p>The goal of this subsection is to allow for the user to connect through their personal device to our project. Their device will be able to display advanced data that our project is collecting that doesn't have a visible component to our project, such as pitch and frequency of volume.</p> <p>Team Webpage Link</p> Assignments Links Block Diagram Link Components Link Bill of Materials Link Schematic and PCB Link API Link Resources Link"},{"location":"API/","title":"API","text":""},{"location":"API/#message-comunication","title":"Message Comunication","text":""},{"location":"API/#message-structure","title":"Message structure","text":"<p>Messages sent between team will look like: [AZ][SENDERID][MESSAGETYPE][VALUES][YB]</p>"},{"location":"API/#message-ids","title":"Message ID's","text":"Name ID Brendan B Zack Z Carter C Broadcast X"},{"location":"API/#messages-sent","title":"Messages sent","text":"Type Byte 1 Byte 2 Byte 3 Variable Name Status_Wifi Wave_freq Active_status Variable Type uint8_t uint8_t uint8_t Min Value 0 0 0 Max Value 1 255 1 Example 1 179 1"},{"location":"API/#message-recieved","title":"Message Recieved","text":"Type Byte 1 Byte 2 Byte 3 Variable Name Tuning Wave_Freq Wave_Length Variable Type uint8_t uint8_t uint8_t Min Value -128 0 0 m Max Value 127 255 255 m Example -3 234 47 m"},{"location":"API/#team-messages","title":"Team Messages","text":"Type Byte 1 Byte 2 Byte 3 Variable Name motor_speed pitch_info Button_input Variable Type uint8_t uint8_t uint8_t Min Value 0 rpm 0 0 Max Value 255 rpm 1 3 Example 4 rpm 0 1"},{"location":"BOM/","title":"BOM","text":""},{"location":"BOM/#bill-of-materials","title":"Bill of Materials","text":""},{"location":"BOM/#bom-parts-list","title":"BOM Parts List","text":"<p>This includes only the amount I needed for my board</p> <p></p> <p>Bill of Materials PDF</p> <p>Excel file of Bill of Materials</p>"},{"location":"BOM/#order-form","title":"Order Form","text":"<p>Purchase request PDF</p> <p>Purchase request Excel</p>"},{"location":"Block_Diagram/","title":"Block Diagram","text":""},{"location":"Block_Diagram/#block-diagram-of-2-way-wifi-communication","title":"Block Diagram of 2 way wifi communication","text":"<p>This block diagram is the MQTT communication portion of our project. The MQTT system is connected via WIFI communication with my microcontroller, the ESP32. The system included 2 different voltages on the board, a 9V which is going into both the voltage regulator and the header pins, and a 3.3V which goes directly into the ESP32. The ESP32 is connected to a USB port in able to code and an LED is being used for debugging purposes. The UART communication is taking in and sending out data from the other subsystems through pin 2 of the header pins.</p> <p>My block diagram meets the requirements of the product as it allows for wifi communication with the rest of the team based on inputs from the user. When designing the block diagram, I had to make a decision on what would be the easiest way to communicate with the rest of my team members and decided upon UART communication as it allowed for easy communication with the rest of my team who was using PIC devices. </p> <p>One problem I ended up running into when designing the initial block diagram was forgetting to add a debugging LED. By forgetting that LED, it made it difficult to tell if the ESP32 was running or not.</p> <p></p> <p>Block Diagram PDF</p> <p>Block Diagram Source</p>"},{"location":"Component_Selection/","title":"Component Selection","text":""},{"location":"Component_Selection/#component-selection-process-and-data-sheet","title":"Component Selection process and data sheet","text":""},{"location":"Component_Selection/#major-components-needed","title":"Major Components needed","text":"<ol> <li>Voltage regulator</li> <li>LED display</li> <li>Microcontroller</li> </ol>"},{"location":"Component_Selection/#summary-table-of-components","title":"Summary Table of components","text":"Component My Pick Microcontroller ESP32-S3-WROOM-1 Voltage Regulator Texas Instruments IC REG BUCK 3.3V 1.7A 8SOIC LED Array W\u00fcrth Elektronik LED GREEN CLEAR 0603 SMD"},{"location":"Component_Selection/#voltage-regulator","title":"Voltage Regulator","text":"<p>The voltage regulator is important to this subsystem as it limits the voltage and current into the microcontrollers to prevent spikes and drops of voltage and to improve performance of systems.</p>"},{"location":"Component_Selection/#product-1-texas-instruments-ic-reg-buck-33v-17a-8soic","title":"Product 1: Texas Instruments IC REG BUCK 3.3V 1.7A 8SOIC","text":"Pros Cons High Output Amperage Lot of soldering pins Lots of stock Very Small Protective features for temperature and short circuits Switching Regulator <p>Link to Texas Instruments IC REG BUCK 3.3V 1.7A 8SOIC</p>"},{"location":"Component_Selection/#product-2-texas-instruments-ic-voltage-regulator","title":"Product 2: Texas Instruments IC Voltage Regulator","text":"Pros Cons Very Cheap Limited Stock Good output amperage Small size Linear Regulator <p>Link to Texas Instruments Voltage Regulator</p>"},{"location":"Component_Selection/#product-3-texas-instruments-ic-reg-boost-adj-980ma-sot23-6","title":"Product 3: Texas Instruments IC REG BOOST ADJ 980MA SOT23-6","text":"Pros Cons Good size Low max input Voltage Easy soldering Low output Amperage Boost switching regulator <p>Link to Texas Instruments IC REG BOOST ADJ 980MA SOT23-6</p>"},{"location":"Component_Selection/#product-choice-for-voltage-regulator-product-1","title":"Product choice for Voltage regulator: Product 1","text":"<p>The Texas Instruments IC REG BUCK 3.3V 1.7A 8SOIC voltage regulator is a powerful voltage regulator that works well within the parameters of my project. With the wall mount supplying power, it will successfully be able to regulator the voltage while sending the most amount of current into the system as well. The size of the regulator is small, however the datasheet offers a guide on how to successfully solder the surface mount voltage regulator. The price point for this voltage regulator is very good as well as it is only $1.60 for each part, this allows for the option to get the ones I would need for my project and then multiple extras in case of an issue with the part occurs.</p>"},{"location":"Component_Selection/#led-array","title":"LED Array","text":"<p>The LED array is important as it allows for a physical signal that the Wifi module is working and that the product is on.</p>"},{"location":"Component_Selection/#product-1-bivar-inc-surface-mount-led","title":"Product 1: Bivar Inc. Surface Mount LED","text":"Pros Cons Multiple color options Small size Very visible lighting Fragile Difficult to solder <p>Link to Bivar Inc. LED</p>"},{"location":"Component_Selection/#product-2-5050-3-chip-led","title":"Product 2: 5050 3-Chip LED","text":"Pros Cons Very Cheap Limited color options Easy to solder Limited datasheet imformation Fast shipping <p>Link to 5050 3-Chip LED</p>"},{"location":"Component_Selection/#product-3-wurth-elektronik-led-green-clear-0603-smd","title":"Product 3: W\u00fcrth Elektronik LED GREEN CLEAR 0603 SMD","text":"Pros Cons Good price Small (0603 size) Very bright Slow shipping Comes in bulk Only comes in green <p>W\u00fcrth Elektronik LED GREEN CLEAR 0603 SMD</p>"},{"location":"Component_Selection/#product-choice-for-led-array-product-3","title":"Product choice for LED Array: Product 3","text":"<p>The W\u00fcrth Elektronik LED GREEN CLEAR 0603 SMD is the choice I ended up going with as, while it only comes in green, it is very powerful and long lasting. Its datasheet contains a lot of useful information on it on how to solder it and how to get different intensities of light from it, something that the other datasheets for LED's had lacked. It is very easy to solder and use for a PCB board as well.</p>"},{"location":"Component_Selection/#microcontroller-information","title":"Microcontroller Information","text":""},{"location":"Component_Selection/#microcontroller-used-esp32-s3-wroom-1","title":"Microcontroller Used: ESP32-S3-WROOM-1","text":""},{"location":"Component_Selection/#role-of-subsystem","title":"Role of Subsystem","text":"<p>For the team, this subsystems role is to allow communication inputs from Wifi and Bluetooth. By gathering these inputs, this subsystem will then send data to the other subsystems of the project to physically perform the action selected. Once the data has been processed by the other subsystems, it will once again be received by this subsystem and sent back out via Wifi to the user.</p> <p>The main focus of this subsystems responsibilities are sensing, display, and communication. For my subsystem, it will be responsible for sensing a button press from a user over Wifi or Bluetooth connection. As it receives this data, it will display something onto their device to allow them to see more information about what the project will be physically demonstrating. The main importance of this subsystem is communication. As the subsystem recieves inputs from the user, it is sending and recieving data to and from the other subsystems in order to physically demonstrate whichever option the user had selected. </p>"},{"location":"Component_Selection/#esp-information","title":"ESP Information","text":"ESP Info Data Model ESP32-S3-WROOM-1 Product page URL Link ESP32-S3-WROOM-1-N4 datasheet Link ESP32 S3 datasheet Link ESP32 S3 Technical Manual Link Vendor Link Link Code Examples Link External Resources Link 1: Getting Started Link 2: Complete Guide Unit Cost $2.50 Supply Voltage Range Operating voltage is between 3.0V-3.6V. 3.3V Recommended Absolute Max Current 1200 mA Maximum GPIO Current 1200 mA Supports External Interrupts? Yes, it supports external interupts Module # Available Needed Associated Pins UART 3 2 Any GPIO Pins External SPI 4 2 Any GPIO Pins I2C 2 1 Any GPIO Pins GPIO 34 12 Any GPIO Pins ADC 2 0 18 Available Pins LED PWM 16 2 Any GPIO Pins Motor PWM 3 0 Any GPIO Pins"},{"location":"Component_Selection/#microcontroller-choice-statement","title":"Microcontroller Choice Statement","text":"<p>The EPS32 module that I had found is well suited for this project. The ESP32 that I have selected contains enough pins to be able to safely and effectively organize the board without crowding. Another thing about the board is the applications it is commonly used in. This ESP module is commonly used in sound recognition and audio devices which would suit well for the project we are working on that involves a microphone. The maximum current in the board is well within the parameters that we intend to keep our components under, so there is very little risk of damage to the EPS32 module and its recommended voltage is the exact same as the voltage we intended to use for our project. This microcontroller also has enough UART's for the project as multiple UART's are needed. This extra UART may be able to help with the debugging process as the code is being designed for this project.</p>"},{"location":"Resources/","title":"Resources","text":""},{"location":"Resources/#visual-studios-mqtt-and-communication-code","title":"Visual Studios MQTT and communication code","text":"<p>VSCode .zip file</p>"},{"location":"Schematic/","title":"Schematic","text":""},{"location":"Schematic/#schematic","title":"Schematic","text":""},{"location":"Schematic/#schematic-design","title":"Schematic Design","text":"<p>Schematic PDF</p>"},{"location":"Schematic/#power-budget","title":"Power Budget","text":"<p>Power Budget PDF</p> <p>Power Budget Link</p> <p>By creating this power budget, I was able to see just how much current and voltage I would need to get my system running properly with a 25% safety cushion if every system were to run at maximum current. The one thing I found when making my power budget was that I needed a wall mount power source that had a bit more current due to the maximum current that my voltage regulator was going to need. For the power budget, when totalling the maximum current for everything with the wall mounts power, the remaining current is very close to 0 mA, however I will not be needing to run every part of my subsystem at maximum current at any time.</p> <p>This schematic helps to satisfy user needs and requirement for our product as it allows for successful communication through Wifi. The schematic itself is very simple as most of the resources will be in coding, however it was important to our team that there be UART communication and LED's to communicate between each of our subsystems and also be able to shine an LED to inform the user that they are connected to the Wifi module. It helps us to meet our user needs as it allows for the user to get extra resources to learn from as an input is being recognized by our project.</p>"},{"location":"Schematic/#pcb-design","title":"PCB Design","text":"<p>PCB Top Layer PDF</p> <p>PCB Bottom Layer PDF</p>"},{"location":"Schematic/#zip-file-for-project-workspace","title":"Zip file for project workspace","text":"<p>Project Zip File</p> <p>Project Gerber Files</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}